/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * See https://docs.radixdlt.com/main/apis/introduction.html 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EntityDetailsResponseDetailsType } from './EntityDetailsResponseDetailsType';
import {
    EntityDetailsResponseDetailsTypeFromJSON,
    EntityDetailsResponseDetailsTypeFromJSONTyped,
    EntityDetailsResponseDetailsTypeToJSON,
} from './EntityDetailsResponseDetailsType';
import type { NonFungibleIdType } from './NonFungibleIdType';
import {
    NonFungibleIdTypeFromJSON,
    NonFungibleIdTypeFromJSONTyped,
    NonFungibleIdTypeToJSON,
} from './NonFungibleIdType';

/**
 * 
 * @export
 * @interface EntityDetailsResponseNonFungibleResourceDetails
 */
export interface EntityDetailsResponseNonFungibleResourceDetails {
    /**
     * 
     * @type {EntityDetailsResponseDetailsType}
     * @memberof EntityDetailsResponseNonFungibleResourceDetails
     */
    discriminator: EntityDetailsResponseDetailsType;
    /**
     * 
     * @type {object}
     * @memberof EntityDetailsResponseNonFungibleResourceDetails
     */
    access_rules_chain: object;
    /**
     * 
     * @type {object}
     * @memberof EntityDetailsResponseNonFungibleResourceDetails
     */
    vault_access_rules_chain: object;
    /**
     * 
     * @type {NonFungibleIdType}
     * @memberof EntityDetailsResponseNonFungibleResourceDetails
     */
    non_fungible_id_type: NonFungibleIdType;
}

/**
 * Check if a given object implements the EntityDetailsResponseNonFungibleResourceDetails interface.
 */
export function instanceOfEntityDetailsResponseNonFungibleResourceDetails(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "discriminator" in value;
    isInstance = isInstance && "access_rules_chain" in value;
    isInstance = isInstance && "vault_access_rules_chain" in value;
    isInstance = isInstance && "non_fungible_id_type" in value;

    return isInstance;
}

export function EntityDetailsResponseNonFungibleResourceDetailsFromJSON(json: any): EntityDetailsResponseNonFungibleResourceDetails {
    return EntityDetailsResponseNonFungibleResourceDetailsFromJSONTyped(json, false);
}

export function EntityDetailsResponseNonFungibleResourceDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntityDetailsResponseNonFungibleResourceDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'discriminator': EntityDetailsResponseDetailsTypeFromJSON(json['discriminator']),
        'access_rules_chain': json['access_rules_chain'],
        'vault_access_rules_chain': json['vault_access_rules_chain'],
        'non_fungible_id_type': NonFungibleIdTypeFromJSON(json['non_fungible_id_type']),
    };
}

export function EntityDetailsResponseNonFungibleResourceDetailsToJSON(value?: EntityDetailsResponseNonFungibleResourceDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'discriminator': EntityDetailsResponseDetailsTypeToJSON(value.discriminator),
        'access_rules_chain': value.access_rules_chain,
        'vault_access_rules_chain': value.vault_access_rules_chain,
        'non_fungible_id_type': NonFungibleIdTypeToJSON(value.non_fungible_id_type),
    };
}

