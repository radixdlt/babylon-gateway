/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * See https://docs.radixdlt.com/main/apis/introduction.html 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EntityNonFungibleIdsRequestAllOf
 */
export interface EntityNonFungibleIdsRequestAllOf {
    /**
     * The Bech32m-encoded human readable version of the entity's global address.
     * @type {string}
     * @memberof EntityNonFungibleIdsRequestAllOf
     */
    address: string;
    /**
     * The Bech32m-encoded human readable version of the resource (fungible, non-fungible) global address.
     * @type {string}
     * @memberof EntityNonFungibleIdsRequestAllOf
     */
    resource_address?: string;
    /**
     * This cursor allows forward pagination, by providing the cursor from the previous request.
     * @type {string}
     * @memberof EntityNonFungibleIdsRequestAllOf
     */
    cursor?: string | null;
    /**
     * The page size requested.
     * @type {number}
     * @memberof EntityNonFungibleIdsRequestAllOf
     */
    limit?: number | null;
}

/**
 * Check if a given object implements the EntityNonFungibleIdsRequestAllOf interface.
 */
export function instanceOfEntityNonFungibleIdsRequestAllOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "address" in value;

    return isInstance;
}

export function EntityNonFungibleIdsRequestAllOfFromJSON(json: any): EntityNonFungibleIdsRequestAllOf {
    return EntityNonFungibleIdsRequestAllOfFromJSONTyped(json, false);
}

export function EntityNonFungibleIdsRequestAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntityNonFungibleIdsRequestAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'address': json['address'],
        'resource_address': !exists(json, 'resource_address') ? undefined : json['resource_address'],
        'cursor': !exists(json, 'cursor') ? undefined : json['cursor'],
        'limit': !exists(json, 'limit') ? undefined : json['limit'],
    };
}

export function EntityNonFungibleIdsRequestAllOfToJSON(value?: EntityNonFungibleIdsRequestAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'address': value.address,
        'resource_address': value.resource_address,
        'cursor': value.cursor,
        'limit': value.limit,
    };
}

