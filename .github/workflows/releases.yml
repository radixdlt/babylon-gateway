name: release
on:
  release:
    types: [published]
jobs:
  build:
    runs-on: ubuntu-22.04
    environment: release
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@607fce577a46308457984d59e4954e075820f10a
        with:
          dotnet-version: 7.0.x
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@f589ce0779c7bef1faf175f7488c972eb47dc046
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Build linux binaries
        run: |
          cd apps/DataAggregator
          dotnet publish --runtime linux-x64 --configuration Release --self-contained false -p:PublishSingleFile=true -p:PublishReadyToRun=true -p:DebugType=None -p:DebugSymbols=false --output ./output
          cd ../DatabaseMigrations
          dotnet publish --runtime linux-x64 --configuration Release --self-contained false -p:PublishSingleFile=true -p:PublishReadyToRun=true -p:DebugType=None -p:DebugSymbols=false --output ./output
          cd ../GatewayApi
          dotnet publish --runtime linux-x64 --configuration Release --self-contained false -p:PublishSingleFile=true -p:PublishReadyToRun=true -p:DebugType=None -p:DebugSymbols=false --output ./output
          cd ../..
          zip -r data-aggregator.zip apps/DataAggregator/output/
          zip -r database-migrations.zip apps/DatabaseMigrations/output/
          zip -r gateway-api.zip apps/GatewayApi/output/

      - name: Upload DataAggreagtor zip
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./data-aggregator.zip
          asset_name: data-aggregator-${{ github.event.release.tag_name }}-linux-x64.zip
          asset_content_type: application/zip
      - name: Upload GatewayAPI zip
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./gateway-api.zip
          asset_name: gateway-api-${{ github.event.release.tag_name }}-linux-x64.zip
          asset_content_type: application/zip
      - name: Upload DatabseMigrations zip
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./database-migrations.zip
          asset_name: database-migrations-${{ github.event.release.tag_name }}-linux-x64.zip
          asset_content_type: application/zip

  setup-tags:
    runs-on: ubuntu-22.04
    outputs:
      database-migrations-tag: ${{ steps.setup_tags.outputs.database-migrations-tag }}
      data-aggregator-tag: ${{ steps.setup_tags.outputs.data-aggregator-tag }}
      gateway-api-tag: ${{ steps.setup_tags.outputs.gateway-api-tag }}
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
      - name: Get rele ase
        id: get_release
        uses: bruceadams/get-release@f589ce0779c7bef1faf175f7488c972eb47dc046
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Setup tags for docker image
        id: setup_tags
        uses: ./.github/actions/set-variables
        with:
          github_event_name: ${{ github.event_name }}
          github_action_name: ${{ github.event.action}}
      - name: Setup application version
        run: |
          echo "$( jq '.+{DataAggregatorVersion:"${{ steps.get_release.outputs.tag_name }}"}' apps/DataAggregator/appsettings.json )" > src/DataAggregator/appsettings.json
          echo "$( jq '.+{DatabaseMigrationsVersion:"${{ steps.get_release.outputs.tag_name }}"}' apps/DatabaseMigrations/appsettings.json )" > src/DatabaseMigrations/appsettings.json
          echo "$( jq '.+{GatewayApiVersion:"${{ steps.get_release.outputs.tag_name }}"}' apps/GatewayApi/appsettings.json )" > src/GatewayAPI/appsettings.json
      - name: Publish Gateway Settings
        uses: actions/upload-artifact@v3
        with:
          path: src/GatewayAPI/appsettings.json
          name: gateway
          retention-days: 1
      - name: Publish DatabaseMigrations Settings
        uses: actions/upload-artifact@v3
        with:
          path: src/DatabaseMigrations/appsettings.json
          name: migrations
          retention-days: 1
      - name: Publish DataAggregator Settings
        uses: actions/upload-artifact@v3
        with:
          path: src/DataAggregator/appsettings.json
          name: aggregator
          retention-days: 1

  docker-database-migrations-dockerhub:
    name: (DatabaseMigrations) Docker
    needs:
      - setup-tags
    uses: radixdlt/public-iac-resuable-artifacts/.github/workflows/docker-build.yml@main
    with:
      runs_on: ubuntu-22.04
      image_registry: "docker.io"
      image_organization: "radixdlt"
      image_name: "babylon-ng-database-migrations"
      tag: ${{ needs.setup-tags.outputs.database-migrations-tag }}
      context: "."
      dockerfile: "./apps/DatabaseMigrations/Dockerfile"
      platforms: "linux/amd64"
      environment: release
      cache_tag_suffix: "release"
      enable_dockerhub: "true"
      restore_artifact: "true"
      artifact_location: "src/DatabaseMigrations/appsettings.json"
      artifact_name: "migrations"
    secrets:
      workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDP }}
      service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      role_to_assume: ${{ secrets.DOCKERHUB_RELEASER_ROLE }}
  
  docker-data-aggregator-dockerhub:
    name: (DataAggregator) Docker
    needs:
      - setup-tags
    uses: radixdlt/public-iac-resuable-artifacts/.github/workflows/docker-build.yml@main
    with:
      runs_on: ubuntu-22.04
      image_registry: "docker.io"
      image_organization: "radixdlt"
      image_name: "babylon-ng-data-aggregator"
      tag: ${{ needs.setup-tags.outputs.data-aggregator-tag }}
      context: "."
      dockerfile: "./apps/DataAggregator/Dockerfile"
      platforms: "linux/amd64"
      environment: release
      cache_tag_suffix: "release"
      enable_dockerhub: "true"
      restore_artifact: "true"
      artifact_location: "src/DataAggregator/appsettings.json"
      artifact_name: "aggregator"
    secrets:
      workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDP }}
      service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      role_to_assume: ${{ secrets.DOCKERHUB_RELEASER_ROLE }}
  
  docker-gateway-api-dockerhub:
    name: (GatewayApi) Docker
    needs:
      - setup-tags
    uses: radixdlt/public-iac-resuable-artifacts/.github/workflows/docker-build.yml@main
    with:
      runs_on: ubuntu-22.04
      image_registry: "docker.io"
      image_organization: "radixdlt"
      image_name: "babylon-ng-gateway-api"
      tag: ${{ needs.setup-tags.outputs.gateway-api-tag }}
      context: "."
      dockerfile: "./apps/GatewayApi/Dockerfile"
      platforms: "linux/amd64"
      environment: release
      cache_tag_suffix: "release"
      enable_dockerhub: "true"
      restore_artifact: "true"
      artifact_location: "src/GatewayAPI/appsettings.json"
      artifact_name: "gateway"
    secrets:
      workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDP }}
      service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      role_to_assume: ${{ secrets.DOCKERHUB_RELEASER_ROLE }}