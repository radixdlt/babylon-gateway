name: main

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        dotnet-version: ['6.0.x']
    services:
      postgres:
        image: postgres:14.3-alpine
        env:
          POSTGRES_USER: db_dev_superuser
          POSTGRES_PASSWORD: db_dev_password
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.8.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          include-prerelease: true
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Unit tests
        run: dotnet test --no-restore --verbosity normal --filter RadixDlt.NetworkGateway.UnitTests
      - name: Integration tests
        run: dotnet test --no-restore --verbosity normal --filter RadixDlt.NetworkGateway.IntegrationTests

  publish-docker:
    runs-on: ubuntu-22.04
    environment: release
    outputs:
      data-aggregator-tag: ${{ steps.setup_tags.outputs.data-aggregator-tag}}
      gateway-api-tag: ${{ steps.setup_tags.outputs.gateway-api-tag}}
    steps:
      - name: Dump context
        uses: crazy-max/ghaction-dump-context@v1
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: eu.gcr.io
          username: _json_key
          password: ${{ secrets.GCR_EU_DEV_JSON_KEY }}

      - name: Setup tags for docker image
        id: setup_tags
        uses: ./.github/actions/set-variables
        with:
          github_event_name: ${{ github.event_name }}
          github_action_name: ${{ github.event.action}}

      - name: Docker build and push DataAggregator
        uses: docker/build-push-action@v2
        with:
          file: ./samples/DataAggregator/Dockerfile
          TAGS: |
            ${{ steps.setup_tags.outputs.data_aggregator_tags }}
          push: true
          context: ./

      - name: Docker build and push Gateway API
        uses: docker/build-push-action@v2
        with:
          file: ./samples/GatewayApi/Dockerfile
          TAGS: |
            ${{ steps.setup_tags.outputs.gateway_api_tags }}
          push: true
          context: ./
