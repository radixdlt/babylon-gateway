# To learn more about .editorconfig see https://aka.ms/editorconfigdocs
# NB - these have replaced ruleset files, eg https://docs.microsoft.com/en-us/visualstudio/code-quality/analyzers-faq?view=vs-2019#editorconfig-versus-rule-sets
root = true

###############################
# Core EditorConfig Options   #
###############################

# All files
[*]
charset = utf-8
indent_style = space
# (Please don't specify an indent_size here; that has too many unintended consequences.)
insert_final_newline = true
trim_trailing_whitespace = true
end_of_line = lf

# Windows scripts
[*.{bat,cmd}]
end_of_line = crlf

# Markdown files
[*.md]
max_line_length = off
trim_trailing_whitespace = false

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4
max_line_length = 180

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# JSON files
[*.json]
indent_size = 4

# YAML files
[*.{yml,yaml}]
indent_size = 2
max_line_length = 180

# Powershell files
[*.ps1]
indent_size = 2

# Razor cshtml files
[*.cshtml]
indent_size = 4

###############################
# .NET Coding Conventions     #
###############################
[*.cshtml.cs]
# Razor Page models
dotnet_diagnostic.SA1649.severity = none

[*.{cs,vb}]
# Organize usings
dotnet_sort_system_directives_first = false
# this. preferences
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_property = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_event = false:silent
# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent
# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent
dotnet_style_readonly_field = true:suggestion
# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent
dotnet_prefer_inferred_tuple_names = true:suggestion
dotnet_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent

###############################
# Naming Conventions          #
###############################
# Non-private static fields are PascalCase
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected internal, private protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static

dotnet_naming_style.non_private_static_field_style.capitalization = pascal_case

# Non-private readonly fields are PascalCase
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.symbols = non_private_readonly_fields
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.style = non_private_readonly_field_style

dotnet_naming_symbols.non_private_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, protected, internal, protected internal, private protected
dotnet_naming_symbols.non_private_readonly_fields.required_modifiers = readonly

dotnet_naming_style.non_private_readonly_field_style.capitalization = pascal_case

# Constants are PascalCase
dotnet_naming_rule.constants_should_be_pascal_case.severity = warning
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = constant_style

dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constant_style.capitalization = pascal_case

# Static fields are camelCase and start with _
dotnet_naming_rule.static_fields_should_be_camel_case.severity = warning
dotnet_naming_rule.static_fields_should_be_camel_case.symbols = static_fields
dotnet_naming_rule.static_fields_should_be_camel_case.style = static_field_style

dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static

dotnet_naming_style.static_field_style.capitalization = camel_case
dotnet_naming_style.static_field_style.required_prefix = _

# Instance fields are camelCase and start with _
dotnet_naming_rule.instance_fields_should_be_camel_case.severity = warning
dotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields
dotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style

dotnet_naming_symbols.instance_fields.applicable_kinds = field

dotnet_naming_style.instance_field_style.capitalization = camel_case
dotnet_naming_style.instance_field_style.required_prefix = _

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = warning
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local

dotnet_naming_style.camel_case_style.capitalization = camel_case

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = warning
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function

dotnet_naming_style.local_function_style.capitalization = pascal_case

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.all_members.applicable_kinds = *

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

###############################
# C# Coding Conventions       #
###############################
[*.cs]
# var preferences
csharp_style_var_for_built_in_types = true:silent
csharp_style_var_when_type_is_apparent = true:silent
csharp_style_var_elsewhere = true:silent
# Expression-bodied members
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
# Null-checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion
# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion
# Expression-level preferences
csharp_prefer_braces = true:silent
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion

###############################
# C# Formatting Rules         #
###############################
# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true
# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left
# Space preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
# Wrapping preferences
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true


###############
# Diagnostics #
###############

# NB - This replaces the .ruleset file for configuring code analysis warnings
# See https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/overview

# [Microsoft.CodeAnalysis.CSharp]

# > New for this project
dotnet_diagnostic.CS1591.severity = none # Missing XML comment for publicly visible type or member 'Type_or_Member'

# > Inherited from other projects
dotnet_diagnostic.CS0612.severity = suggestion
dotnet_diagnostic.CS0618.severity = suggestion

# [StyleCop.Analyzers]

# > New for this project

# Broken with C#10

dotnet_diagnostic.SA1313.severity = none # SA1313ParameterNamesMustBeginWithLowerCaseLetter - breaks with record structs

# Documentation - the net effect is to recommend public docs with a summary tag (via CS1591 and SA1604), but not be too critical of the rest
dotnet_diagnostic.SA1600.severity = none # SA1600ElementsMustBeDocumented - Duplicates CS1591 - let's just use CS1591 instead
dotnet_diagnostic.SA1615.severity = none # SA1615ElementReturnValueMustBeDocumented
dotnet_diagnostic.SA1611.severity = none # SA1611ElementParametersMustBeDocumented
dotnet_diagnostic.SA1602.severity = none # SA1602EnumerationItemsMustBeDocumented
dotnet_diagnostic.SA1601.severity = none # SA1601PartialElementsMustBeDocumented

# Other
dotnet_diagnostic.SA1200.severity = none # SA1200UsingDirectivesMustBePlacedCorrectly - Don't care about this now that there are flattened namespaces
dotnet_diagnostic.SA1111.severity = none # SA1111ClosingParenthesisMustBeOnLineOfLastParameter - I prefer symmetric bracket placement as they're easier to parse in blocks
dotnet_diagnostic.SA1009.severity = none # SA1009ClosingParenthesisMustBeSpacedCorrectly - Goes hand-in-hand with SA1111
dotnet_diagnostic.SA1117.severity = none # SA1117ParametersMustBeOnSameLineOrSeparateLines - Structured log messages benefit from being across 2 lines - one for message, one for parameters
dotnet_diagnostic.SA1512.severity = none # SA1512SingleLineCommentsMustNotBeFollowedByBlankLine - As it fights with // ReSharper disable comments
dotnet_diagnostic.SA1515.severity = none # SA1515SingleLineCommentMustBePrecededByBlankLine - As it fights with // ReSharper disable comments
dotnet_diagnostic.SA1402.severity = none # SA1402FileMayOnlyContainASingleType - it insists a file contains only one top-level class, contrary to a number of places in the codebase, where auxiliary classes are included
dotnet_diagnostic.SA1649.severity = none # SA1649FileNameMustMatchTypeName - it insists the main type comes first in the file, contrary to a number of places in the codebase

# > Inherited from other projects
dotnet_diagnostic.SA0001.severity = none # SA0001XmlCommentAnalysisDisabled
dotnet_diagnostic.SA1101.severity = none # SA1101PrefixLocalCallsWithThis
dotnet_diagnostic.SA1124.severity = none # SA1124DoNotUseRegions
dotnet_diagnostic.SA1129.severity = none # SA1129DoNotUseDefaultValueTypeConstructor - does not comply with the use of HashCode
dotnet_diagnostic.SA1201.severity = none # SA1201ElementsMustAppearInTheCorrectOrder
dotnet_diagnostic.SA1309.severity = none # SA1309FieldNamesMustNotBeginWithUnderscore
dotnet_diagnostic.SA1633.severity = none # SA1633FileMustHaveHeader

dotnet_diagnostic.SX1101.severity = warning # SX1101DoNotPrefixLocalMembersWithThis
dotnet_diagnostic.SX1309.severity = warning # SX1309FieldNamesMustBeginWithUnderscore

# [Resharper] - see https://www.jetbrains.com/help/rider/EditorConfig_Index.html
resharper_inconsistent_naming_highlighting = none # Resharper disagrees with IDE1006 for public static fields
resharper_redundant_anonymous_type_property_name_highlighting = none # Explicit is useful
resharper_bitwise_operator_on_enum_without_flags_highlighting = none # BitwiseOperatorOnEnumWithoutFlags - PostgreSQL NpgsqlDbTypes unfortunately don't have the Flags property

# None

# [SonarQube.CSharpSquid]
dotnet_diagnostic.S3903.severity = none # Types should be defined in named namespaces -- it breaks with C# 10 File scoped namespace declarations
